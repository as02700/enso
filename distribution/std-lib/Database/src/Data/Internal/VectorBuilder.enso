from Builtins import Array
from Base import all

type VectorBuilder
    type Leaf vec
    type Append left right

    length : Integer
    length = case this of
        Leaf vec -> vec.length
        Append l r -> l.length + r.length

    build : Vector.Vector Any
    build =
       array = Array.new this.length
       goTree ix elem = case elem of
           Leaf vec ->
               vec.map_with_index (vi -> elem -> array.set_at ix+vi elem)
               vec.length
           Append l r ->
               ix2 = ix + goTree ix l
               goTree ix2 r
       Vector.Vector array

    ++ : VectorBuilder Any | Vector Any -> VectorBuilder Any
    ++ other = case other of
        Leaf _ -> Append this other
        Append _ _ -> Append this other
        Vector.Vector _ -> Append this (Leaf other)

empty : VectorBuilder Any
empty = Leaf []

from_vector : Vector Any -> VectorBuilder Any
from_vector vec = Leaf vec
