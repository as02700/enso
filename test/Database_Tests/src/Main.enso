from Base import all
import Test
import Database.Connection.Connection
import Database.Data.Dialect

#main = Test.Suite.runMain <|
#    Table_Spec.spec

main =
    IO.println "Hello"
    table1 = ["T1", ["A", "B", "C"]]
    tables = Map.from_vector [table1]
    conn = Connection.make_fake_connection Dialect.sqlite tables
    IO.println conn.dialect

    t1 = conn.access_table "T1"
    IO.println t1
    t1.to_sql.fragments.each IO.println
    IO.println t1.to_sql

    mask = (t1.at "A" < t1.at "B") && (t1.at "C" == 42)
    IO.println mask

    t2 = t1.where mask
    IO.println t2
    IO.println t2.to_sql

    t3 = t2.join (t2.set_index "A") on="B"
    IO.println t3
    IO.println t3.to_sql.unsafe_to_raw_sql
